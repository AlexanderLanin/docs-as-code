# *******************************************************************************
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0
#
# SPDX-License-Identifier: Apache-2.0
# *******************************************************************************

name: Run Consumer Tests on Comment
on: issue_comment

permissions:
  statuses: write # API 1
  checks: write # API 2
  contents: read
  pull-requests: read

jobs:
  consumer_test:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/consumer-test') }}
    runs-on: ubuntu-latest
    steps:
      - name: Get PR details
        id: pr_details
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.comment.body.trim().split(' ');
            const consumer_branch = body[1] || null;
            core.setOutput("consumer_branch", consumer_branch);

            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            core.setOutput('head_sha', pr.head.sha);
            core.setOutput('head_ref', pr.head.ref);

      - name: Checkout PR
        uses: actions/checkout@v4.2.2
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Register Consumer Tests Status
        id: register_check
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ steps.pr_details.outputs.head_sha }}',
              state: 'pending',
              context: 'Consumer Tests (Manual)',
              description: 'Running consumer tests (manually triggered by @${{ github.event.comment.user.login }})',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${{ github.run_id }}`
            });

            console.log('Created commit status:', response);
            core.setOutput('status_id', response.data.id);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Consumer Tests as Running
        id: start_check
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Consumer Tests (Manual)',
              head_sha: '${{ steps.pr_details.outputs.head_sha }}',
              status: 'in_progress',
              details_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              output: {
                title: 'Running Consumer Tests',
                summary: `Tests manually triggered by @${context.actor}\n\nLink to details: [Action Run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
              }
            });
            console.log('Created check run response:', response);
            core.setOutput('check_id', response.data.id);

      - name: Run Consumer tests
        id: consumer_tests
        run: |
          bazel run //:ide_support
          # TODO: pass CONSUMER_BRANCH via command line
          # .venv_docs/bin/python -m pytest -s -v src/tests/
          sleep 10
        env:
          FORCE_COLOR: "1"
          TERM: xterm-256color
          PYTHONUNBUFFERED: "1"
          CONSUMER_BRANCH: '${{ steps.pr_details.outputs.consumer_branch }}'

      - name: Report Consumer Tests Status
        if: always() # TODO: requires check_id, otherwise skip!!
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: '${{ steps.start_check.outputs.check_id }}',
              status: 'completed',
              conclusion: '${{ steps.consumer_tests.outcome == 'success' && 'success' || 'failure' }}',
              details_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              output: {
                title: 'Consumer Tests Completed',
                summary: `All tests passed successfully.\n\nLink to details: [Action Run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
              }
            });
